{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\PROJECTS\\\\THINKSPACE\\\\client\\\\src\\\\components\\\\MindMap.js\";\nimport React from 'react';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupColors = {\n  Definition: '#FFD700',\n  Purpose: '#87CEFA',\n  Techniques: '#90EE90',\n  Examples: '#FFB6C1',\n  Info: '#D3D3D3'\n};\nconst MindMap = ({\n  nodes\n}) => {\n  const rfNodes = nodes.map((node, index) => ({\n    id: node.id,\n    data: {\n      label: node.label\n    },\n    position: {\n      x: index % 5 * 200,\n      y: Math.floor(index / 5) * 150\n    },\n    style: {\n      backgroundColor: groupColors[node.group] || '#EEE',\n      padding: 10,\n      borderRadius: 10\n    }\n  }));\n  const edges = nodes.slice(1).map((node, index) => ({\n    id: `e${index}-${index + 1}`,\n    source: nodes[index].id,\n    target: node.id,\n    animated: true\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      border: '1px solid #ccc'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: rfNodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","jsxDEV","_jsxDEV","groupColors","Definition","Purpose","Techniques","Examples","Info","MindMap","nodes","rfNodes","map","node","index","id","data","label","position","x","y","Math","floor","style","backgroundColor","group","padding","borderRadius","edges","slice","source","target","animated","height","border","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN STACK/PROJECTS/THINKSPACE/client/src/components/MindMap.js"],"sourcesContent":["import React from 'react';\r\nimport ReactFlow, { Background, Controls } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst groupColors = {\r\n  Definition: '#FFD700',\r\n  Purpose: '#87CEFA',\r\n  Techniques: '#90EE90',\r\n  Examples: '#FFB6C1',\r\n  Info: '#D3D3D3',\r\n};\r\n\r\nconst MindMap = ({ nodes }) => {\r\n  const rfNodes = nodes.map((node, index) => ({\r\n    id: node.id,\r\n    data: { label: node.label },\r\n    position: { x: (index % 5) * 200, y: Math.floor(index / 5) * 150 },\r\n    style: {\r\n      backgroundColor: groupColors[node.group] || '#EEE',\r\n      padding: 10,\r\n      borderRadius: 10,\r\n    },\r\n  }));\r\n\r\n  const edges = nodes.slice(1).map((node, index) => ({\r\n    id: `e${index}-${index + 1}`,\r\n    source: nodes[index].id,\r\n    target: node.id,\r\n    animated: true,\r\n  }));\r\n\r\n  return (\r\n    <div style={{ height: '80vh', border: '1px solid #ccc' }}>\r\n      <ReactFlow nodes={rfNodes} edges={edges} fitView>\r\n        <Background />\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MindMap;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,WAAW;AAC3D,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,SAAS;EACrBC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE,SAAS;EACrBC,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC7B,MAAMC,OAAO,GAAGD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;IAC1CC,EAAE,EAAEF,IAAI,CAACE,EAAE;IACXC,IAAI,EAAE;MAAEC,KAAK,EAAEJ,IAAI,CAACI;IAAM,CAAC;IAC3BC,QAAQ,EAAE;MAAEC,CAAC,EAAGL,KAAK,GAAG,CAAC,GAAI,GAAG;MAAEM,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACR,KAAK,GAAG,CAAC,CAAC,GAAG;IAAI,CAAC;IAClES,KAAK,EAAE;MACLC,eAAe,EAAErB,WAAW,CAACU,IAAI,CAACY,KAAK,CAAC,IAAI,MAAM;MAClDC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB;EACF,CAAC,CAAC,CAAC;EAEH,MAAMC,KAAK,GAAGlB,KAAK,CAACmB,KAAK,CAAC,CAAC,CAAC,CAACjB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;IACjDC,EAAE,EAAE,IAAID,KAAK,IAAIA,KAAK,GAAG,CAAC,EAAE;IAC5BgB,MAAM,EAAEpB,KAAK,CAACI,KAAK,CAAC,CAACC,EAAE;IACvBgB,MAAM,EAAElB,IAAI,CAACE,EAAE;IACfiB,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC;EAEH,oBACE9B,OAAA;IAAKqB,KAAK,EAAE;MAAEU,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,QAAA,eACvDjC,OAAA,CAACJ,SAAS;MAACY,KAAK,EAAEC,OAAQ;MAACiB,KAAK,EAAEA,KAAM;MAACQ,OAAO;MAAAD,QAAA,gBAC9CjC,OAAA,CAACH,UAAU;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdtC,OAAA,CAACF,QAAQ;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACC,EAAA,GA3BIhC,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}