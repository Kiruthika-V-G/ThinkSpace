{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\PROJECTS\\\\THINKSPACE\\\\client\\\\src\\\\components\\\\MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MindMap = ({\n  nodes\n}) => {\n  _s();\n  const initialNodes = useMemo(() => {\n    return nodes.map((node, index) => ({\n      id: node.id,\n      data: {\n        label: node.label\n      },\n      position: {\n        x: index % 5 * 200,\n        y: Math.floor(index / 5) * 150\n      },\n      type: 'default'\n    }));\n  }, [nodes]);\n  const initialEdges = useMemo(() => {\n    return nodes.filter(node => node.head !== node.id && nodes.some(n => n.id === node.head)).map(node => ({\n      id: `e${node.head}-${node.id}`,\n      source: node.head,\n      target: node.id,\n      animated: true\n    }));\n  }, [nodes]);\n  const [nodeState,, onNodesChange] = useNodesState(initialNodes);\n  const [edgeState,, onEdgesChange] = useEdgesState(initialEdges);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '600px',\n      border: '1px solid #ccc'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodeState,\n      edges: edgeState,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MindMap, \"J5nlxPQP+n/F21Bv4b1w2hnEFWE=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","useMemo","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","jsxDEV","_jsxDEV","MindMap","nodes","_s","initialNodes","map","node","index","id","data","label","position","x","y","Math","floor","type","initialEdges","filter","head","some","n","source","target","animated","nodeState","onNodesChange","edgeState","onEdgesChange","style","width","height","border","children","edges","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN STACK/PROJECTS/THINKSPACE/client/src/components/MindMap.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport ReactFlow, {\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  useNodesState,\r\n  useEdgesState,\r\n\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst MindMap = ({ nodes }) => {\r\n  const initialNodes = useMemo(() => {\r\n    return nodes.map((node, index) => ({\r\n      id: node.id,\r\n      data: { label: node.label },\r\n      position: { x: (index % 5) * 200, y: Math.floor(index / 5) * 150 },\r\n      type: 'default',\r\n    }));\r\n  }, [nodes]);\r\n\r\n  const initialEdges = useMemo(() => {\r\n    return nodes\r\n      .filter((node) => node.head !== node.id && nodes.some(n => n.id === node.head))\r\n      .map((node) => ({\r\n        id: `e${node.head}-${node.id}`,\r\n        source: node.head,\r\n        target: node.id,\r\n        animated: true,\r\n      }));\r\n  }, [nodes]);\r\n\r\n  const [nodeState, , onNodesChange] = useNodesState(initialNodes);\r\n  const [edgeState, , onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '600px', border: '1px solid #ccc' }}>\r\n      <ReactFlow\r\n        nodes={nodeState}\r\n        edges={edgeState}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        fitView\r\n      >\r\n        <MiniMap />\r\n        <Controls />\r\n        <Background />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MindMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,aAAa,QAER,WAAW;AAClB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGZ,OAAO,CAAC,MAAM;IACjC,OAAOU,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;MACjCC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,IAAI,EAAE;QAAEC,KAAK,EAAEJ,IAAI,CAACI;MAAM,CAAC;MAC3BC,QAAQ,EAAE;QAAEC,CAAC,EAAGL,KAAK,GAAG,CAAC,GAAI,GAAG;QAAEM,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACR,KAAK,GAAG,CAAC,CAAC,GAAG;MAAI,CAAC;MAClES,IAAI,EAAE;IACR,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,MAAMe,YAAY,GAAGzB,OAAO,CAAC,MAAM;IACjC,OAAOU,KAAK,CACTgB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACa,IAAI,KAAKb,IAAI,CAACE,EAAE,IAAIN,KAAK,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKF,IAAI,CAACa,IAAI,CAAC,CAAC,CAC9Ed,GAAG,CAAEC,IAAI,KAAM;MACdE,EAAE,EAAE,IAAIF,IAAI,CAACa,IAAI,IAAIb,IAAI,CAACE,EAAE,EAAE;MAC9Bc,MAAM,EAAEhB,IAAI,CAACa,IAAI;MACjBI,MAAM,EAAEjB,IAAI,CAACE,EAAE;MACfgB,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACtB,KAAK,CAAC,CAAC;EAEX,MAAM,CAACuB,SAAS,GAAIC,aAAa,CAAC,GAAG7B,aAAa,CAACO,YAAY,CAAC;EAChE,MAAM,CAACuB,SAAS,GAAIC,aAAa,CAAC,GAAG9B,aAAa,CAACmB,YAAY,CAAC;EAEhE,oBACEjB,OAAA;IAAK6B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,QAAA,eACvEjC,OAAA,CAACP,SAAS;MACRS,KAAK,EAAEuB,SAAU;MACjBS,KAAK,EAAEP,SAAU;MACjBD,aAAa,EAAEA,aAAc;MAC7BE,aAAa,EAAEA,aAAc;MAC7BO,OAAO;MAAAF,QAAA,gBAEPjC,OAAA,CAACN,OAAO;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXvC,OAAA,CAACL,QAAQ;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZvC,OAAA,CAACJ,UAAU;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACpC,EAAA,CAvCIF,OAAO;EAAA,QAqB0BJ,aAAa,EACbC,aAAa;AAAA;AAAA0C,EAAA,GAtB9CvC,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}