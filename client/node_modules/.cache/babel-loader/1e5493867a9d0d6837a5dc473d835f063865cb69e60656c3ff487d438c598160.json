{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\PROJECTS\\\\THINKSPACE\\\\client\\\\src\\\\components\\\\MindMap.js\";\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryColors = {\n  root: '#ff0072',\n  definition: '#00bcd4',\n  purpose: '#4caf50',\n  techniques: '#ff9800'\n};\nconst MindMap = ({\n  nodes\n}) => {\n  const reactFlowNodes = nodes.map((node, index) => ({\n    id: node.id,\n    data: {\n      label: `${node.label}`\n    },\n    position: {\n      x: 100 + index * 200,\n      y: node.category === 'root' ? 0 : 100\n    },\n    style: {\n      background: categoryColors[node.category] || '#eee',\n      padding: 10,\n      borderRadius: 8\n    }\n  }));\n  const edges = nodes.filter(node => node.category !== 'root').map(node => ({\n    id: `e-root-${node.id}`,\n    source: 'root',\n    target: node.id,\n    type: 'smoothstep'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: reactFlowNodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["React","ReactFlow","MiniMap","Controls","Background","jsxDEV","_jsxDEV","categoryColors","root","definition","purpose","techniques","MindMap","nodes","reactFlowNodes","map","node","index","id","data","label","position","x","y","category","style","background","padding","borderRadius","edges","filter","source","target","type","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN STACK/PROJECTS/THINKSPACE/client/src/components/MindMap.js"],"sourcesContent":["import React from 'react';\r\nimport ReactFlow, { MiniMap, Controls, Background } from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst categoryColors = {\r\n  root: '#ff0072',\r\n  definition: '#00bcd4',\r\n  purpose: '#4caf50',\r\n  techniques: '#ff9800',\r\n};\r\n\r\nconst MindMap = ({ nodes }) => {\r\n  const reactFlowNodes = nodes.map((node, index) => ({\r\n    id: node.id,\r\n    data: { label: `${node.label}` },\r\n    position: { x: 100 + index * 200, y: node.category === 'root' ? 0 : 100 },\r\n    style: {\r\n      background: categoryColors[node.category] || '#eee',\r\n      padding: 10,\r\n      borderRadius: 8,\r\n    },\r\n  }));\r\n\r\n  const edges = nodes\r\n    .filter((node) => node.category !== 'root')\r\n    .map((node) => ({\r\n      id: `e-root-${node.id}`,\r\n      source: 'root',\r\n      target: node.id,\r\n      type: 'smoothstep',\r\n    }));\r\n\r\n  return (\r\n    <div style={{ height: '600px' }}>\r\n      <ReactFlow nodes={reactFlowNodes} edges={edges} fitView>\r\n        <MiniMap />\r\n        <Controls />\r\n        <Background />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MindMap;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,IAAIC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,WAAW;AACpE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAG;EACrBC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,SAAS;EACrBC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC7B,MAAMC,cAAc,GAAGD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;IACjDC,EAAE,EAAEF,IAAI,CAACE,EAAE;IACXC,IAAI,EAAE;MAAEC,KAAK,EAAE,GAAGJ,IAAI,CAACI,KAAK;IAAG,CAAC;IAChCC,QAAQ,EAAE;MAAEC,CAAC,EAAE,GAAG,GAAGL,KAAK,GAAG,GAAG;MAAEM,CAAC,EAAEP,IAAI,CAACQ,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG;IAAI,CAAC;IACzEC,KAAK,EAAE;MACLC,UAAU,EAAEnB,cAAc,CAACS,IAAI,CAACQ,QAAQ,CAAC,IAAI,MAAM;MACnDG,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB;EACF,CAAC,CAAC,CAAC;EAEH,MAAMC,KAAK,GAAGhB,KAAK,CAChBiB,MAAM,CAAEd,IAAI,IAAKA,IAAI,CAACQ,QAAQ,KAAK,MAAM,CAAC,CAC1CT,GAAG,CAAEC,IAAI,KAAM;IACdE,EAAE,EAAE,UAAUF,IAAI,CAACE,EAAE,EAAE;IACvBa,MAAM,EAAE,MAAM;IACdC,MAAM,EAAEhB,IAAI,CAACE,EAAE;IACfe,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEL,oBACE3B,OAAA;IAAKmB,KAAK,EAAE;MAAES,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9B7B,OAAA,CAACL,SAAS;MAACY,KAAK,EAAEC,cAAe;MAACe,KAAK,EAAEA,KAAM;MAACO,OAAO;MAAAD,QAAA,gBACrD7B,OAAA,CAACJ,OAAO;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXlC,OAAA,CAACH,QAAQ;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZlC,OAAA,CAACF,UAAU;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACC,EAAA,GA9BI7B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}